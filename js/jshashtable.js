/* jsHashtable
 *
 * Copyright 2009 Tim Down.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *			http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Hashtable=function(){function q(a){return typeof a==r?a:typeof a[C]==g?(a=a.hashCode(),typeof a==r?a:q(a)):typeof a[D]==g?a.toString():String(a)}function E(a,b){return a.equals(b)}function F(a,b){return typeof b[s]==g?b.equals(a):a===b}function t(a){return function(b){if(null===b)throw Error("null is not a valid "+a);if(typeof b==G)throw Error(a+" must not be undefined");}}function u(a,b,c){this.entries=[];this.addEntry(a,b);null!==c&&(this.getEqualityFunction=function(){return c})}function h(a){return function(b){for(var c=this.entries.length,d,f=this.getEqualityFunction(b);c--;)if(d=this.entries[c],f(b,d[0]))switch(a){case v:return!0;case w:return d;case x:return[c,d[1]]}return!1}}function y(a){return function(b){for(var c=b.length,d=0,f=this.entries.length;d<f;++d)b[c+d]=this.entries[d][a]}}function n(){}function k(a,b){var c=a[b];return c&&c instanceof n?c[1]:null}function z(a,b){var c=this,d=[],f={},l=typeof a==g?a:q,h=typeof b==g?b:null;this.put=function(a,b){m(a);A(b);var c=l(a),e,g=null;(e=k(f,c))?(c=e.getEntryForKey(a))?(g=c[1],c[1]=b):e.addEntry(a,b):(e=new n,e[0]=c,e[1]=new u(a,b,h),d[d.length]=e,f[c]=e);return g};this.get=function(a){m(a);var b=l(a);if(b=k(f,b))if(a=b.getEntryForKey(a))return a[1];return null};this.containsKey=function(a){m(a);var b=l(a);return(b=k(f,b))?b.containsKey(a):!1};this.containsValue=function(a){A(a);for(var b=d.length;b--;)if(d[b][1].containsValue(a))return!0;return!1};this.clear=function(){d.length=0;f={}};this.isEmpty=function(){return!d.length};var p=function(a){return function(){for(var b=[],c=d.length;c--;)d[c][1][a](b);return b}};this.keys=p("keys");this.values=p("values");this.entries=p("getEntries");this.remove=function(a){m(a);var b=l(a),c=null,e=k(f,b);if(e&&(c=e.removeEntryForKey(a),null!==c&&!e.entries.length)){a:{for(a=d.length;a--;)if(e=d[a],b===e[0])break a;a=null}B(d,a);f[b]=null;delete f[b]}return c};this.size=function(){for(var a=0,b=d.length;b--;)a+=d[b][1].entries.length;return a};this.each=function(a){for(var b=c.entries(),d=b.length,e;d--;)e=b[d],a(e[0],e[1])};this.putAll=function(a,b){for(var d=a.entries(),e,f,h,k=d.length,l=typeof b==g;k--;)e=d[k],f=e[0],e=e[1],l&&(h=c.get(f))&&(e=b(f,h,e)),c.put(f,e)};this.clone=function(){var d=new z(a,b);d.putAll(c);return d}}var G="undefined",g="function",r="string",s="equals",C="hashCode",D="toString",B=typeof Array.prototype.splice==g?function(a,b){a.splice(b,1)}:function(a,b){var c,d,f;if(b===a.length-1)a.length=b;else for(c=a.slice(b+1),a.length=b,d=0,f=c.length;d<f;++d)a[b+d]=c[d]},m=t("key"),A=t("value"),v=0,w=1,x=2;u.prototype={getEqualityFunction:function(a){return typeof a[s]==g?E:F},getEntryForKey:h(w),getEntryAndIndexForKey:h(x),removeEntryForKey:function(a){return(a=this.getEntryAndIndexForKey(a))?(B(this.entries,a[0]),a[1]):null},addEntry:function(a,b){this.entries[this.entries.length]=[a,b]},keys:y(0),values:y(1),getEntries:function(a){for(var b=a.length,c=0,d=this.entries.length;c<d;++c)a[b+c]=this.entries[c].slice(0)},containsKey:h(v),containsValue:function(a){for(var b=this.entries.length;b--;)if(a===this.entries[b][1])return!0;return!1}};n.prototype=[];return z}();